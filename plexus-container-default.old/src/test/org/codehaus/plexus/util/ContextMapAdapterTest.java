package org.codehaus.plexus.util;

import java.io.StringReader;
import java.io.StringWriter;

import junit.framework.TestCase;

import org.codehaus.plexus.context.DefaultContext;

/**
 * Generated by JUnitDoclet, a tool provided by ObjectFab GmbH under LGPL.
 * Please see www.junitdoclet.org, www.gnu.org and www.objectfab.de for
 * informations about the tool, the licence and the authors.
 */
public class ContextMapAdapterTest
    extends TestCase
{
    public ContextMapAdapterTest( String name )
    {
        super( name );
    }

    public void testInterpolation()
        throws Exception
    {
        DefaultContext context = new DefaultContext();

        context.put( "name", "jason" );

        context.put( "occupation", "exotic dancer" );

        ContextMapAdapter adapter = new ContextMapAdapter( context );

        assertEquals( "jason", (String) adapter.get( "name" ) );

        assertEquals( "exotic dancer", (String) adapter.get( "occupation" ) );

        assertNull( adapter.get( "foo") );
    }

    public void testInterpolationWithContext()
        throws Exception
    {
        DefaultContext context = new DefaultContext();
        context.put( "name", "jason" );
        context.put( "noun", "asshole" );

        String foo = "${name} is an ${noun}. ${not.interpolated}";

        InterpolationFilterReader reader =
            new InterpolationFilterReader( new StringReader( foo ), new ContextMapAdapter( context ) );

        StringWriter writer = new StringWriter();
        IOUtil.copy( reader, writer );

        String bar = writer.toString();
        assertEquals( "jason is an asshole. ${not.interpolated}", bar );
    }
}
