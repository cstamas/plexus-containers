package org.codehaus.plexus.configuration;

import junit.framework.TestCase;
import org.apache.avalon.framework.configuration.Configuration;

import java.io.StringReader;

/**
 * Generated by JUnitDoclet, a tool provided by ObjectFab GmbH under LGPL.
 * Please see www.junitdoclet.org, www.gnu.org and www.objectfab.de for
 * informations about the tool, the licence and the authors.
 */
public class XmlPullConfigurationBuilderTest
    extends TestCase
{
    public XmlPullConfigurationBuilderTest( String name )
    {
        super( name );
    }

    /**
     * The JUnit setup method
     */
    protected void setUp()
        throws Exception
    {
    }

    /**
     * The teardown method for JUnit
     */
    protected void tearDown()
        throws Exception
    {
    }

    public void testSimpleConfigurationBuilding()
        throws Exception
    {
        String s = "<conf><name>jason</name></conf>";
        XmlPullConfigurationBuilder cb = new XmlPullConfigurationBuilder();
        Configuration c = cb.parse( new StringReader( s ) );

        assertNotNull( c );
        assertEquals( "jason", c.getChild( "name" ).getValue() );
    }

    public void testMixedContentFailure()
        throws Exception
    {
        String s = "<conf>mixed<name>jason</name></conf>";
        XmlPullConfigurationBuilder cb = new XmlPullConfigurationBuilder();

        try
        {
            Configuration c = cb.parse( new StringReader( s ) );

            fail();
        }
        catch ( Exception e )
        {
            // do nothing
        }
    }

    public void testParserReuse()
        throws Exception
    {
        String s = "<conf><name>jason</name></conf>";
        XmlPullConfigurationBuilder cb = new XmlPullConfigurationBuilder();

        Configuration c = cb.parse( new StringReader( s ) );
        assertNotNull( c );
        assertEquals( "jason", c.getChild( "name" ).getValue() );

        s = "<conf><name>bob</name></conf>";
        c = cb.parse( new StringReader( s ) );
        assertNotNull( c );
        assertEquals( "bob", c.getChild( "name" ).getValue() );

        s = "<conf><name>pete</name></conf>";
        c = cb.parse( new StringReader( s ) );
        assertNotNull( c );
        assertEquals( "pete", c.getChild( "name" ).getValue() );

        s = "<conf><name>melissa</name></conf>";
        c = cb.parse( new StringReader( s ) );
        assertNotNull( c );
        assertEquals( "melissa", c.getChild( "name" ).getValue() );
    }

    public void testReaderClosure()
        throws Exception
    {
        String s = "<conf><name>jason</name></conf>";
        XmlPullConfigurationBuilder cb = new XmlPullConfigurationBuilder();
        CloseCheckStringReader reader = new CloseCheckStringReader( s );

        assertFalse( "reader closed before parsing", reader.isClosed() );

        Configuration c = cb.parse( reader );

        assertTrue( "reader not closed after parsing", reader.isClosed() );
    }
}
