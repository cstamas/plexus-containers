<plexus>

  <configurations-directory>${basedir}/src/test-input/configurations-directory</configurations-directory>

  <load-on-start>
    <service role="org.codehaus.plexus.LoadOnStartService"/>
    <service role="org.codehaus.plexus.LoadOnStartServiceWithRoleHint" id="role-hint"/>
    <service role="org.codehaus.plexus.BogusRole"/>
  </load-on-start>

  <system-properties>
    <property name="foo" value="bar"/>
  </system-properties>

  <logging>
    <implementation>org.codehaus.plexus.logging.ConsoleLoggerManager</implementation>
    <logger>
      <threshold>ERROR</threshold>
    </logger>
  </logging>

  <service-repository>
    <implementation>org.codehaus.plexus.component.repository.DefaultComponentRepository</implementation>
  </service-repository>

  <!--
   |
   | User defined lifecycle handlers
   |
   -->
  <lifecycle-handlers>
    <lifecycle-handler implementation="org.codehaus.plexus.SimpleLifecycleHandler">
      <id>arbitrary</id>
      <name>Arbitrary Lifecycle Handler</name>
      <begin-segment>
        <phase implementation="org.codehaus.plexus.lifecycle.phase.EenyPhase"/>
        <phase implementation="org.codehaus.plexus.lifecycle.phase.MeenyPhase"/>
        <phase implementation="org.codehaus.plexus.lifecycle.phase.MinyPhase"/>
        <phase implementation="org.codehaus.plexus.lifecycle.phase.MoPhase"/>
      </begin-segment>
      <suspend-segment>
      </suspend-segment>
      <resume-segment>
      </resume-segment>
      <end-segment>
      </end-segment>
    </lifecycle-handler>
  </lifecycle-handlers>

  <components>

    <!--
     |
     | A Service
     |
     | This service implements all the Avalon lifecycle methods.
     |
     -->
    <component>
      <role>org.codehaus.plexus.ServiceA</role>
      <implementation>org.codehaus.plexus.DefaultServiceA</implementation>
      <configuration>
        <host>localhost</host>
        <port>10000</port>
      </configuration>
    </component>

    <!--
     |
     | B Service
     |
     -->
    <component>
      <role>org.codehaus.plexus.ServiceB</role>
      <implementation>org.codehaus.plexus.DefaultServiceB</implementation>
      <configuration>
        <host>localhost</host>
        <port>10000</port>
      </configuration>
    </component>

    <!--
     |
     | C Service
     |
     -->
    <component>
      <role>org.codehaus.plexus.ServiceC</role>
      <role-hint>only-instance</role-hint>
      <implementation>org.codehaus.plexus.DefaultServiceC</implementation>
      <configuration>
        <host>localhost</host>
        <port>10000</port>
      </configuration>
    </component>

    <!--
     |
     | D Service
     |
     -->
    <component>
      <role>org.codehaus.plexus.ServiceD</role>
      <implementation>org.codehaus.plexus.DefaultServiceD</implementation>
      <instantiation-strategy>poolable</instantiation-strategy>
      <configuration>
        <host>localhost</host>
        <port>10000</port>
      </configuration>
    </component>

    <!--
     |
     | E Service
     |
     | This service implements Configurable, but the component configuration below
     | deliberately omits the <configuration> element to verify that such elements
     | are not mandatory.
     -->
    <component>
      <role>org.codehaus.plexus.ServiceE</role>
      <implementation>org.codehaus.plexus.DefaultServiceE</implementation>
      <instantiation-strategy>per-lookup</instantiation-strategy>
    </component>


    <!--
     |
     | G Service
     |
     -->
    <component>
      <role>org.codehaus.plexus.ServiceG</role>
      <implementation>org.codehaus.plexus.DefaultServiceG</implementation>
      <instantiation-strategy>singleton-keep-alive</instantiation-strategy>
      <configuration/>
    </component>

    <!--
     |
     | H Service
     |
     -->

    <component>
      <role>org.codehaus.plexus.ServiceH</role>
      <implementation>org.codehaus.plexus.DefaultServiceH</implementation>
      <lifecycle-handler>arbitrary</lifecycle-handler>
    </component>

    <component>
      <role>org.codehaus.plexus.LoadOnStartService</role>
      <implementation>org.codehaus.plexus.DefaultLoadOnStartService</implementation>
      <configuration/>
    </component>

    <component>
      <role>org.codehaus.plexus.LoadOnStartServiceWithRoleHint</role>
      <role-hint>role-hint</role-hint>
      <implementation>org.codehaus.plexus.DefaultLoadOnStartServiceWithRoleHint</implementation>
    </component>

  </components>

</plexus>
